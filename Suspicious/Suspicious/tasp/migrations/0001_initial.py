# Generated by Django 5.0.3 on 2024-08-22 13:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analyzer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('weight', models.FloatField()),
                ('analyzer_cortex_id', models.CharField(max_length=50, unique=True)),
                ('analyzer_cortex_2_id', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('category', models.CharField(default='unknown category', max_length=50)),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_path', models.FileField(upload_to='files/')),
                ('file_score', models.FloatField(default=0)),
                ('file_confidence', models.FloatField(default=0)),
                ('file_level', models.CharField(default='unknown level', max_length=20)),
                ('tmp_path', models.TextField()),
                ('filetype', models.CharField(default='unknown filetype', max_length=255)),
                ('size', models.PositiveIntegerField(default=0)),
                ('other_names', models.TextField()),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hash',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('ioc_score', models.FloatField(default=0)),
                ('ioc_confidence', models.FloatField(default=0)),
                ('ioc_level', models.CharField(default='unknown level', max_length=20)),
                ('hashtype', models.CharField(default='sha256 hash', max_length=50)),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=15)),
                ('ioc_score', models.FloatField(default=0)),
                ('ioc_confidence', models.FloatField(default=0)),
                ('ioc_level', models.CharField(default='unknown level', max_length=20)),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=255)),
                ('reportedBy', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('to', models.CharField(max_length=255)),
                ('cc', models.CharField(max_length=255)),
                ('mail_id', models.CharField(max_length=255)),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MailAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MailBody',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('body_score', models.FloatField(default=0)),
                ('body_confidence', models.FloatField(default=0)),
                ('body_level', models.CharField(default='unknown level', max_length=20)),
                ('body_value', models.TextField()),
                ('fuzzy_hash', models.TextField()),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('other_values', models.TextField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mailbox',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=256)),
                ('server', models.CharField(max_length=50)),
                ('port', models.IntegerField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MailHeader',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('header_score', models.FloatField(default=0)),
                ('header_confidence', models.FloatField(default=0)),
                ('header_level', models.CharField(default='unknown level', max_length=20)),
                ('header_value', models.TextField()),
                ('fuzzy_hash', models.TextField()),
                ('other_values', models.TextField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyCasesSummary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('suspicious_cases', models.PositiveIntegerField(default=0)),
                ('inconclusive_cases', models.PositiveIntegerField(default=0)),
                ('failure_cases', models.PositiveIntegerField(default=0)),
                ('dangerous_cases', models.PositiveIntegerField(default=0)),
                ('safe_cases', models.PositiveIntegerField(default=0)),
                ('challenged_cases', models.PositiveIntegerField(default=0)),
                ('whitelisted_cases', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReporterStats',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('new_reporters', models.PositiveIntegerField(default=0)),
                ('total_reporters', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TotalCasesStats',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_cases', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ioc_score', models.FloatField(default=0)),
                ('ioc_confidence', models.FloatField(default=0)),
                ('ioc_level', models.CharField(default='unknown level', max_length=20)),
                ('address', models.TextField()),
                ('times_sent', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('analysis_done', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('To Do', 'Todo'), ('On Going', 'Ongoing'), ('Challenged', 'Challenged'), ('Done', 'Done')], default='To Do', max_length=20, verbose_name='Status')),
                ('results', models.CharField(choices=[('Safe', 'Safe'), ('Inconclusive', 'Inconclusive'), ('Unchallenged', 'Unchallenged'), ('Whitelisted', 'Whitelisted'), ('Failure', 'Failure'), ('Suspicious', 'Suspicious'), ('Dangerous', 'Dangerous')], default='Inconclusive', max_length=20, verbose_name='Results')),
                ('finalScore', models.FloatField(default=0)),
                ('finalConfidence', models.FloatField(default=0)),
                ('is_challenged', models.BooleanField(default=False)),
                ('challenged_result', models.CharField(choices=[('Safe', 'Safe'), ('Inconclusive', 'Inconclusive'), ('Unchallenged', 'Unchallenged'), ('Whitelisted', 'Whitelisted'), ('Failure', 'Failure'), ('Suspicious', 'Suspicious'), ('Dangerous', 'Dangerous')], default='Unchallenged', max_length=20, verbose_name='Challenged Result')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases_last_update_by', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CaseHasFileOrMail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_has_file_or_mail', to='tasp.case')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_has_file_or_mail', to='tasp.file')),
                ('mail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_has_file_or_mail', to='tasp.mail')),
            ],
        ),
        migrations.AddField(
            model_name='case',
            name='fileOrMail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='tasp.casehasfileormail'),
        ),
        migrations.CreateModel(
            name='CaseHasNonFileIocs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_has_non_file_iocs', to='tasp.case')),
                ('hash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_has_non_file_iocs', to='tasp.hash')),
                ('ip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_has_non_file_iocs', to='tasp.ip')),
                ('url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='case_has_non_file_iocs', to='tasp.url')),
            ],
        ),
        migrations.AddField(
            model_name='case',
            name='nonFileIocs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='tasp.casehasnonfileiocs'),
        ),
        migrations.CreateModel(
            name='CISOProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('function', models.CharField(max_length=200)),
                ('gbu', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=200)),
                ('scope', models.CharField(default='Not defined', max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FileInCases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('case', models.ManyToManyField(to='tasp.case')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_cases', to='tasp.file')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='linked_hash',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file', to='tasp.hash'),
        ),
        migrations.CreateModel(
            name='HashFromFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hash_files', to='tasp.file')),
                ('hash', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hash_files', to='tasp.hash')),
            ],
        ),
        migrations.CreateModel(
            name='HashInCases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('case', models.ManyToManyField(to='tasp.case')),
                ('hash', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hash_cases', to='tasp.hash')),
            ],
        ),
        migrations.CreateModel(
            name='IpInCases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('case', models.ManyToManyField(to='tasp.case')),
                ('ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_cases', to='tasp.ip')),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactIsUrl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('associated_mails', models.ManyToManyField(to='tasp.mail')),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactIsIp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_artifacts', to='tasp.ip')),
                ('associated_mails', models.ManyToManyField(to='tasp.mail')),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactIsHash',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('hash', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hash_artifacts', to='tasp.hash')),
                ('associated_mails', models.ManyToManyField(to='tasp.mail')),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactIsDomain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_artifacts', to='tasp.domain')),
                ('associated_mails', models.ManyToManyField(to='tasp.mail')),
            ],
        ),
        migrations.CreateModel(
            name='DomainInIocs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_iocs', to='tasp.domain')),
                ('mail_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_iocs', to='tasp.mailaddress')),
                ('url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_iocs', to='tasp.url')),
            ],
        ),
        migrations.AddField(
            model_name='domain',
            name='linked_mail_addresses',
            field=models.ManyToManyField(related_name='domains', through='tasp.DomainInIocs', to='tasp.mailaddress'),
        ),
        migrations.CreateModel(
            name='ArtifactIsMailAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('associated_mails', models.ManyToManyField(to='tasp.mail')),
                ('mail_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_address_artifacts', to='tasp.mailaddress')),
            ],
        ),
        migrations.CreateModel(
            name='MailAnalyzed',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_phishing', models.BooleanField(default=False)),
                ('is_dangerous', models.BooleanField(default=False)),
                ('is_legitimate', models.BooleanField(default=False)),
                ('is_spam', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_analyzed', to='tasp.mail')),
            ],
        ),
        migrations.CreateModel(
            name='MailArtifact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('artifact_score', models.FloatField(default=0)),
                ('artifact_confidence', models.FloatField(default=0)),
                ('artifact_level', models.CharField(default='unknown level', max_length=20)),
                ('artifact_type', models.CharField(choices=[('URL', 'URL'), ('IP', 'IP'), ('Hash', 'Hash'), ('Domain', 'Domain'), ('MailAddress', 'MailAddress')], max_length=20)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('artifactIsDomain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mail_artifacts', to='tasp.artifactisdomain')),
                ('artifactIsHash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mail_artifacts', to='tasp.artifactishash')),
                ('artifactIsIp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mail_artifacts', to='tasp.artifactisip')),
                ('artifactIsMailAddress', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mail_artifacts', to='tasp.artifactismailaddress')),
                ('artifactIsUrl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mail_artifacts', to='tasp.artifactisurl')),
            ],
        ),
        migrations.AddField(
            model_name='mail',
            name='mail_artifacts',
            field=models.ManyToManyField(to='tasp.mailartifact'),
        ),
        migrations.AddField(
            model_name='artifactisurl',
            name='artifact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_artifacts', to='tasp.mailartifact'),
        ),
        migrations.AddField(
            model_name='artifactismailaddress',
            name='artifact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_address_artifacts', to='tasp.mailartifact'),
        ),
        migrations.AddField(
            model_name='artifactisip',
            name='artifact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_artifacts', to='tasp.mailartifact'),
        ),
        migrations.AddField(
            model_name='artifactishash',
            name='artifact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hash_artifacts', to='tasp.mailartifact'),
        ),
        migrations.AddField(
            model_name='artifactisdomain',
            name='artifact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_artifacts', to='tasp.mailartifact'),
        ),
        migrations.CreateModel(
            name='MailAttachment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_score', models.FloatField(default=0)),
                ('attachment_confidence', models.FloatField(default=0)),
                ('attachment_level', models.CharField(default='unknown level', max_length=20)),
                ('att_hash_score', models.FloatField(default=0)),
                ('att_hash_confidence', models.FloatField(default=0)),
                ('att_hash_level', models.CharField(default='unknown level', max_length=20)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mail_attachments', to='tasp.file')),
            ],
        ),
        migrations.AddField(
            model_name='mail',
            name='mail_attachments',
            field=models.ManyToManyField(to='tasp.mailattachment'),
        ),
        migrations.AddField(
            model_name='mail',
            name='mail_body',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mails', to='tasp.mailbody'),
        ),
        migrations.AddField(
            model_name='mail',
            name='mail_header',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mails', to='tasp.mailheader'),
        ),
        migrations.CreateModel(
            name='MailInCases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('associated_cases', models.ManyToManyField(to='tasp.case')),
                ('associated_mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases_associated_with_mail', to='tasp.mail')),
            ],
        ),
        migrations.CreateModel(
            name='MailInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_received', models.BooleanField(default=False)),
                ('user_reception_informed', models.BooleanField(default=False)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('user_analysis_informed', models.BooleanField(default=False)),
                ('is_phishing', models.BooleanField(default=False)),
                ('user_phishing_informed', models.BooleanField(default=False)),
                ('is_dangerous', models.BooleanField(default=False)),
                ('user_dangerous_informed', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_info', to='tasp.mail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Kpi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('month', models.CharField(max_length=200)),
                ('year', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('monthly_cases_summary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kpis', to='tasp.monthlycasessummary')),
                ('monthly_reporter_stats', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kpis', to='tasp.monthlyreporterstats')),
                ('total_cases_stats', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kpis', to='tasp.totalcasesstats')),
            ],
        ),
        migrations.AddField(
            model_name='domain',
            name='linked_urls',
            field=models.ManyToManyField(related_name='domains', through='tasp.DomainInIocs', to='tasp.url'),
        ),
        migrations.AddField(
            model_name='artifactisurl',
            name='url',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_artifacts', to='tasp.url'),
        ),
        migrations.CreateModel(
            name='AnalyzerReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cortex_job_id', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('level', models.CharField(max_length=50)),
                ('confidence', models.FloatField()),
                ('score', models.FloatField()),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('report_summary', models.JSONField()),
                ('report_taxonomy', models.JSONField()),
                ('report_full', models.JSONField()),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('analyzer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.analyzer')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.file')),
                ('hash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.hash')),
                ('ip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.ip')),
                ('mail_body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.mailbody')),
                ('mail_header', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.mailheader')),
                ('url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyzer_reports', to='tasp.url')),
            ],
        ),
        migrations.CreateModel(
            name='UrlInCases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('case', models.ManyToManyField(to='tasp.case')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_cases', to='tasp.url')),
            ],
        ),
        migrations.CreateModel(
            name='UserCasesMonthlyStats',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('suspicious_cases', models.PositiveIntegerField(default=0)),
                ('inconclusive_cases', models.PositiveIntegerField(default=0)),
                ('failure_cases', models.PositiveIntegerField(default=0)),
                ('dangerous_cases', models.PositiveIntegerField(default=0)),
                ('safe_cases', models.PositiveIntegerField(default=0)),
                ('challenged_cases', models.PositiveIntegerField(default=0)),
                ('whitelisted_cases', models.PositiveIntegerField(default=0)),
                ('total_cases', models.PositiveIntegerField(default=0)),
                ('month', models.CharField(max_length=200)),
                ('year', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_cases_monthly_stats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('function', models.CharField(max_length=200)),
                ('gbu', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=200)),
                ('wants_acknowledgement', models.BooleanField(default=True)),
                ('wants_results', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WhitelistDomain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='whitelists', to='tasp.domain')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WhitelistFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('linked_file_hash', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='whitelists', to='tasp.hash')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WhitelistFiletype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('filetype', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
