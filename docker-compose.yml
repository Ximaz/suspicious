name : suspicious

services:
  db_suspicious:
    init: true
    image: mariadb:11.6.2
    container_name: db_suspicious
    ports:
      - "127.0.0.1:${MYSQL_PORT}:3306"
    restart: always
    command: "\
      --default-authentication-plugin=mysql_native_password \
      --innodb-buffer-pool-size=${INNODB_BUFFER_POOL_SIZE:-2048M} \
      --innodb-change-buffering=${INNODB_CHANGE_BUFFERING:-none} \
      --innodb-io-capacity=${INNODB_IO_CAPACITY:-1000} \
      --innodb-io-capacity-max=${INNODB_IO_CAPACITY_MAX:-2000} \
      --innodb-log-file-size=${INNODB_LOG_FILE_SIZE:-600M} \
      --innodb-read-io-threads=${INNODB_READ_IO_THREADS:-16} \
      --innodb-stats-persistent=${INNODB_STATS_PERSISTENT:-ON} \
      --innodb-write-io-threads=${INNODB_WRITE_IO_THREADS:-4}"
    volumes:
      - '${DB_SUSPICIOUS_PATH}/data:/var/lib/mysql'
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - suspicious_net
    healthcheck:
      test: mariadb-admin --user=${MYSQL_USER} --password=${MYSQL_PASSWORD} status
      interval: 2s
      timeout: 1s
      retries: 15
      start_period: 30s

  suspicious:
    # build:
    #   context: ./Suspicious
    #   dockerfile: Dockerfile
    #   args:
    #     - HTTP_PROXY=${HTTP_PROXY}
    #     - HTTPS_PROXY=${HTTPS_PROXY}
    container_name: suspicious
    image: ghcr.io/thalesgroup-cert/suspicious:latest
    depends_on:
      db_suspicious:
        condition: service_healthy
      cortex:
        condition: service_healthy
    init: true
    ports:
      - "127.0.0.1:${SUSPICIOUS_PORT}:9020"
    restart: always
    volumes:
      - "${SUSPICIOUS_PATH}/logs:/var/log"
      - "${SUSPICIOUS_PATH}/Suspicious/settings.json:/app/settings.json"
    command: >
      /bin/bash -c "
      python3 manage.py crontab show &&
      python3 manage.py crontab start &&
      python3 manage.py crontab show &&
      python3 manage.py runserver 0.0.0.0:9020 --insecure"
    env_file:
      - "${SUSPICIOUS_PATH}/.env"
    tty: true
    environment:
      no_proxy: "${NO_PROXY}"
    networks:
      - suspicious_net
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:9020/admin/login/ | grep -q 200 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 15
      start_period: 60s

  elasticsearch:
    image: 'elasticsearch:7.17.28'
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "127.0.0.1:${ELASTICSEARCH_PORT}:9200"
    volumes:
      - "${ELASTICSEARCH_PATH}/data:/usr/share/elasticsearch/data"
      - "${ELASTICSEARCH_PATH}/logs:/usr/share/elasticsearch/logs"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      http_proxy: "${HTTP_PROXY}"
      https_proxy: "${HTTPS_PROXY}"
      no_proxy: "localhost"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      http.host: "0.0.0.0"
      cluster.name: "suspicious"
      script.allowed_types: "inline,stored"
      thread_pool.search.queue_size: "100000"
      thread_pool.write.queue_size: "10000"
      gateway.recover_after_nodes: "1"
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms512m"
    networks:
      - suspicious_net
    healthcheck:
      test: ["CMD-SHELL", "curl -k --silent --fail localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 15
      start_period: 60s

  cortex:
    image: 'thehiveproject/cortex:3.2.0'
    container_name: cortex
    ports:
      - "127.0.0.1:${CORTEX_PORT}:9001"
    restart: unless-stopped
    privileged: true
    environment:
      http_proxy: "${HTTP_PROXY}"
      https_proxy: "${HTTPS_PROXY}"
      no_proxy: "localhost"
      JAVA_OPTS: "-Djavax.net.ssl.trustStore=/etc/cortex/keystore.jks"
      job_directory: "/opt/jobs"
    volumes:
      # Certificates
      - "${CA_PATH}/keystore.jks:/etc/cortex/keystore.jks:ro"
      # Cortex config
      - "${CORTEX_PATH}/jobs:/opt/jobs:rw"
      - "${CORTEX_PATH}/application.conf:/etc/cortex/application.conf:ro"
      - "${CORTEX_PATH}/application-cortex.log:/var/log/cortex/application.log:rw"
      # Docker configuration
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${CORTEX_PATH}/docker/config.json:/home/cortex/.docker/config.json:ro"
      # Public Neurons
      - "${CORTEX_PATH}/Cortex-Analyzers/:/opt/Cortex-Analyzers/:ro"
      # Yara rules
      - "./yara/rules/:/opt/Yara/rules"
    networks:
      - suspicious_net
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:9001/api/status | grep -q 200 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 15
      start_period: 60s

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "127.0.0.1:9033:9000"
      - "127.0.0.1:9034:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    networks:
      - suspicious_net

  feeder:
    build:
      context: ./email-feeder
      dockerfile: Dockerfile
      args:
        - PATH_TO=./
        - NO_PROXY=localhost,minio
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    command: >
      /bin/bash -c "python3 main.py"
    volumes:
      - ./email-feeder/application.log:/app/application.log
    ports:
      - "127.0.0.1:8333:9020"
    container_name: email_feeder
    depends_on:
      - suspicious
    networks:
      - suspicious_net

volumes:
  minio_data:

networks:
  suspicious_net:
